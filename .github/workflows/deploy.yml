name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and Upload
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./pdp_tool

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="pdp_tool"

          dirname="pdp-with-tool-${{ env.VERSION }}-${{ matrix.target }}"
          
          mkdir "$dirname"
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
           mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
           mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi
          
          cp ../{README.md,LICENSE,institute_list.conf,institute_list.csv,institute_list.json,related_articles.tsv} "$dirname"
          cp csv2ini.py "$dirname"
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
           7z a "$dirname.zip" "$dirname"
           echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
           tar -czf "$dirname.tar.gz" "$dirname"
           echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi
      - name: Upload the archive
        uses: softprops/action-gh-release@v1
        with:
          files: |
            pdp_tool/${{ env.ASSET }}
          
